<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clock_gettime@plt (16 samples, 0.01%)</title><rect x="1188.7" y="245" width="0.2" height="15.0" fill="rgb(244,72,16)" rx="2" ry="2" />
<text text-anchor="" x="1191.69" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self (38 samples, 0.03%)</title><rect x="717.0" y="117" width="0.3" height="15.0" fill="rgb(251,204,41)" rx="2" ry="2" />
<text text-anchor="" x="719.95" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (37 samples, 0.03%)</title><rect x="855.8" y="117" width="0.4" height="15.0" fill="rgb(218,197,19)" rx="2" ry="2" />
<text text-anchor="" x="858.80" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (112,812 samples, 98.34%)</title><rect x="28.3" y="229" width="1160.4" height="15.0" fill="rgb(206,210,24)" rx="2" ry="2" />
<text text-anchor="" x="31.27" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RouterThread::driver (112,812 samples, 98.34%)</title><rect x="28.3" y="197" width="1160.4" height="15.0" fill="rgb(228,70,27)" rx="2" ry="2" />
<text text-anchor="" x="31.27" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >RouterThread::driver</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>swapper (25 samples, 0.02%)</title><rect x="1189.7" y="277" width="0.3" height="15.0" fill="rgb(241,80,12)" rx="2" ry="2" />
<text text-anchor="" x="1192.74" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (112 samples, 0.10%)</title><rect x="1140.0" y="149" width="1.1" height="15.0" fill="rgb(223,90,28)" rx="2" ry="2" />
<text text-anchor="" x="1142.96" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::element_hook (21 samples, 0.02%)</title><rect x="1142.6" y="165" width="0.2" height="15.0" fill="rgb(245,37,10)" rx="2" ry="2" />
<text text-anchor="" x="1145.63" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_in_cksum (1,201 samples, 1.05%)</title><rect x="723.3" y="117" width="12.4" height="15.0" fill="rgb(234,137,44)" rx="2" ry="2" />
<text text-anchor="" x="726.35" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (28 samples, 0.02%)</title><rect x="28.0" y="245" width="0.2" height="15.0" fill="rgb(238,129,22)" rx="2" ry="2" />
<text text-anchor="" x="30.96" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (33 samples, 0.03%)</title><rect x="27.6" y="245" width="0.4" height="15.0" fill="rgb(252,148,42)" rx="2" ry="2" />
<text text-anchor="" x="30.62" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (4,410 samples, 3.84%)</title><rect x="1142.8" y="165" width="45.4" height="15.0" fill="rgb(236,226,35)" rx="2" ry="2" />
<text text-anchor="" x="1145.85" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDP..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (650 samples, 0.57%)</title><rect x="710.3" y="69" width="6.7" height="15.0" fill="rgb(240,50,35)" rx="2" ry="2" />
<text text-anchor="" x="713.26" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (195 samples, 0.17%)</title><rect x="1138.0" y="149" width="2.0" height="15.0" fill="rgb(234,185,20)" rx="2" ry="2" />
<text text-anchor="" x="1140.95" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (4,374 samples, 3.81%)</title><rect x="1143.2" y="149" width="45.0" height="15.0" fill="rgb(253,196,33)" rx="2" ry="2" />
<text text-anchor="" x="1146.22" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virt..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (1,006 samples, 0.88%)</title><rect x="706.6" y="101" width="10.4" height="15.0" fill="rgb(236,36,29)" rx="2" ry="2" />
<text text-anchor="" x="709.60" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (87 samples, 0.08%)</title><rect x="845.8" y="149" width="0.9" height="15.0" fill="rgb(205,36,23)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (20 samples, 0.02%)</title><rect x="1188.3" y="149" width="0.2" height="15.0" fill="rgb(214,63,49)" rx="2" ry="2" />
<text text-anchor="" x="1191.27" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (19 samples, 0.02%)</title><rect x="1188.0" y="133" width="0.2" height="15.0" fill="rgb(251,186,44)" rx="2" ry="2" />
<text text-anchor="" x="1191.01" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SelectSet::run_selects (117 samples, 0.10%)</title><rect x="1141.1" y="181" width="1.2" height="15.0" fill="rgb(209,24,6)" rx="2" ry="2" />
<text text-anchor="" x="1144.11" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::check_timer_expiry (10 samples, 0.01%)</title><rect x="746.4" y="117" width="0.1" height="15.0" fill="rgb(246,121,54)" rx="2" ry="2" />
<text text-anchor="" x="749.36" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::run_timers (4,500 samples, 3.92%)</title><rect x="1142.3" y="181" width="46.3" height="15.0" fill="rgb(228,80,19)" rx="2" ry="2" />
<text text-anchor="" x="1145.31" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Time..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>smp_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="839.8" y="69" width="0.2" height="15.0" fill="rgb(247,40,6)" rx="2" ry="2" />
<text text-anchor="" x="842.84" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::unschedule (17 samples, 0.01%)</title><rect x="746.7" y="133" width="0.2" height="15.0" fill="rgb(220,50,41)" rx="2" ry="2" />
<text text-anchor="" x="749.74" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (52 samples, 0.05%)</title><rect x="840.0" y="101" width="0.5" height="15.0" fill="rgb(252,216,36)" rx="2" ry="2" />
<text text-anchor="" x="842.97" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (148 samples, 0.13%)</title><rect x="854.7" y="133" width="1.5" height="15.0" fill="rgb(241,183,45)" rx="2" ry="2" />
<text text-anchor="" x="857.66" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__irqentry_text_start (14 samples, 0.01%)</title><rect x="10.4" y="245" width="0.2" height="15.0" fill="rgb(213,82,4)" rx="2" ry="2" />
<text text-anchor="" x="13.44" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BatchElement::push_batch (1,944 samples, 1.69%)</title><rect x="717.3" y="149" width="20.0" height="15.0" fill="rgb(218,226,15)" rx="2" ry="2" />
<text text-anchor="" x="720.34" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_data_batch (218 samples, 0.19%)</title><rect x="840.5" y="133" width="2.2" height="15.0" fill="rgb(238,125,5)" rx="2" ry="2" />
<text text-anchor="" x="843.50" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__irqentry_text_start (10 samples, 0.01%)</title><rect x="1137.8" y="149" width="0.1" height="15.0" fill="rgb(213,25,43)" rx="2" ry="2" />
<text text-anchor="" x="1140.81" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PacketBatch::recycle_batch (45 samples, 0.04%)</title><rect x="745.6" y="133" width="0.5" height="15.0" fill="rgb(245,103,19)" rx="2" ry="2" />
<text text-anchor="" x="748.61" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (112,901 samples, 98.42%)</title><rect x="28.3" y="261" width="1161.3" height="15.0" fill="rgb(235,49,27)" rx="2" ry="2" />
<text text-anchor="" x="31.27" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>smp_apic_timer_interrupt (14 samples, 0.01%)</title><rect x="10.4" y="229" width="0.2" height="15.0" fill="rgb(205,89,23)" rx="2" ry="2" />
<text text-anchor="" x="13.44" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (10,540 samples, 9.19%)</title><rect x="737.3" y="149" width="108.5" height="15.0" fill="rgb(231,211,18)" rx="2" ry="2" />
<text text-anchor="" x="740.34" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (1,163 samples, 1.01%)</title><rect x="705.0" y="117" width="12.0" height="15.0" fill="rgb(232,6,2)" rx="2" ry="2" />
<text text-anchor="" x="707.99" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (4,009 samples, 3.49%)</title><rect x="1146.8" y="133" width="41.2" height="15.0" fill="rgb(238,186,42)" rx="2" ry="2" />
<text text-anchor="" x="1149.78" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >mod..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (931 samples, 0.81%)</title><rect x="846.7" y="165" width="9.5" height="15.0" fill="rgb(228,148,19)" rx="2" ry="2" />
<text text-anchor="" x="849.65" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cpu_startup_entry (25 samples, 0.02%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(214,182,20)" rx="2" ry="2" />
<text text-anchor="" x="1192.74" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (27 samples, 0.02%)</title><rect x="845.5" y="133" width="0.3" height="15.0" fill="rgb(246,10,44)" rx="2" ry="2" />
<text text-anchor="" x="848.48" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CheckIPHeader::simple_action_batch (1,615 samples, 1.41%)</title><rect x="719.1" y="133" width="16.6" height="15.0" fill="rgb(250,170,25)" rx="2" ry="2" />
<text text-anchor="" x="722.09" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (3,023 samples, 2.64%)</title><rect x="686.2" y="149" width="31.1" height="15.0" fill="rgb(225,221,14)" rx="2" ry="2" />
<text text-anchor="" x="689.25" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >AR..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (19 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(238,165,22)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (11 samples, 0.01%)</title><rect x="1188.5" y="165" width="0.1" height="15.0" fill="rgb(246,5,28)" rx="2" ry="2" />
<text text-anchor="" x="1191.48" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>memset@plt (53 samples, 0.05%)</title><rect x="1188.9" y="245" width="0.5" height="15.0" fill="rgb(222,86,30)" rx="2" ry="2" />
<text text-anchor="" x="1191.89" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (16,701 samples, 14.56%)</title><rect x="674.9" y="165" width="171.8" height="15.0" fill="rgb(238,44,40)" rx="2" ry="2" />
<text text-anchor="" x="677.86" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Classifier::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::schedule_at_steady (65 samples, 0.06%)</title><rect x="746.1" y="133" width="0.6" height="15.0" fill="rgb(223,189,44)" rx="2" ry="2" />
<text text-anchor="" x="749.07" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__cpuidle_text_start (25 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(208,152,9)" rx="2" ry="2" />
<text text-anchor="" x="1192.74" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>irq_exit (12 samples, 0.01%)</title><rect x="839.8" y="53" width="0.2" height="15.0" fill="rgb(233,173,0)" rx="2" ry="2" />
<text text-anchor="" x="842.84" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>smp_apic_timer_interrupt (10 samples, 0.01%)</title><rect x="1137.8" y="133" width="0.1" height="15.0" fill="rgb(242,207,31)" rx="2" ry="2" />
<text text-anchor="" x="1140.81" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self@plt (13 samples, 0.01%)</title><rect x="1189.5" y="245" width="0.1" height="15.0" fill="rgb(228,196,43)" rx="2" ry="2" />
<text text-anchor="" x="1192.48" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (112,812 samples, 98.34%)</title><rect x="28.3" y="213" width="1160.4" height="15.0" fill="rgb(235,213,17)" rx="2" ry="2" />
<text text-anchor="" x="31.27" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__softirqentry_text_start (10 samples, 0.01%)</title><rect x="1137.8" y="101" width="0.1" height="15.0" fill="rgb(252,167,39)" rx="2" ry="2" />
<text text-anchor="" x="1140.81" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Strip::simple_action_batch (159 samples, 0.14%)</title><rect x="735.7" y="133" width="1.6" height="15.0" fill="rgb(248,46,9)" rx="2" ry="2" />
<text text-anchor="" x="738.70" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__softirqentry_text_start (14 samples, 0.01%)</title><rect x="10.4" y="197" width="0.2" height="15.0" fill="rgb(248,143,20)" rx="2" ry="2" />
<text text-anchor="" x="13.44" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (13 samples, 0.01%)</title><rect x="10.0" y="245" width="0.1" height="15.0" fill="rgb(248,131,27)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (24 samples, 0.02%)</title><rect x="1188.2" y="165" width="0.3" height="15.0" fill="rgb(247,138,31)" rx="2" ry="2" />
<text text-anchor="" x="1191.23" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>irq_exit (10 samples, 0.01%)</title><rect x="1137.8" y="117" width="0.1" height="15.0" fill="rgb(228,176,25)" rx="2" ry="2" />
<text text-anchor="" x="1140.81" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (8,718 samples, 7.60%)</title><rect x="750.8" y="117" width="89.7" height="15.0" fill="rgb(205,141,25)" rx="2" ry="2" />
<text text-anchor="" x="753.82" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (27,694 samples, 24.14%)</title><rect x="856.2" y="165" width="284.9" height="15.0" fill="rgb(219,34,23)" rx="2" ry="2" />
<text text-anchor="" x="859.24" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_recv_mergeable_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (906 samples, 0.79%)</title><rect x="707.6" y="85" width="9.4" height="15.0" fill="rgb(234,206,7)" rx="2" ry="2" />
<text text-anchor="" x="710.63" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (63 samples, 0.05%)</title><rect x="27.6" y="261" width="0.7" height="15.0" fill="rgb(220,85,28)" rx="2" ry="2" />
<text text-anchor="" x="30.62" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (27 samples, 0.02%)</title><rect x="746.5" y="117" width="0.2" height="15.0" fill="rgb(216,126,6)" rx="2" ry="2" />
<text text-anchor="" x="749.46" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (1,694 samples, 1.48%)</title><rect x="10.2" y="261" width="17.4" height="15.0" fill="rgb(238,150,26)" rx="2" ry="2" />
<text text-anchor="" x="13.20" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (112,812 samples, 98.34%)</title><rect x="28.3" y="245" width="1160.4" height="15.0" fill="rgb(252,93,18)" rx="2" ry="2" />
<text text-anchor="" x="31.27" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (83,030 samples, 72.38%)</title><rect x="287.0" y="181" width="854.1" height="15.0" fill="rgb(231,55,29)" rx="2" ry="2" />
<text text-anchor="" x="290.03" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >FromDPDKDevice::run_task</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (155 samples, 0.14%)</title><rect x="854.6" y="149" width="1.6" height="15.0" fill="rgb(239,128,53)" rx="2" ry="2" />
<text text-anchor="" x="857.59" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__irqentry_text_start (12 samples, 0.01%)</title><rect x="839.8" y="85" width="0.2" height="15.0" fill="rgb(251,91,20)" rx="2" ry="2" />
<text text-anchor="" x="842.84" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_safe_halt (25 samples, 0.02%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(236,65,16)" rx="2" ry="2" />
<text text-anchor="" x="1192.74" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (6,578 samples, 5.73%)</title><rect x="772.3" y="101" width="67.7" height="15.0" fill="rgb(246,74,34)" rx="2" ry="2" />
<text text-anchor="" x="775.30" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (9,098 samples, 7.93%)</title><rect x="746.9" y="133" width="93.6" height="15.0" fill="rgb(248,217,5)" rx="2" ry="2" />
<text text-anchor="" x="749.91" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevic..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (22 samples, 0.02%)</title><rect x="10.2" y="245" width="0.2" height="15.0" fill="rgb(205,213,32)" rx="2" ry="2" />
<text text-anchor="" x="13.22" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (24 samples, 0.02%)</title><rect x="845.5" y="117" width="0.3" height="15.0" fill="rgb(210,76,43)" rx="2" ry="2" />
<text text-anchor="" x="848.51" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>irq_exit (14 samples, 0.01%)</title><rect x="10.4" y="213" width="0.2" height="15.0" fill="rgb(226,150,4)" rx="2" ry="2" />
<text text-anchor="" x="13.44" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_secondary (25 samples, 0.02%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(234,56,31)" rx="2" ry="2" />
<text text-anchor="" x="1192.74" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::handle_ip (2,772 samples, 2.42%)</title><rect x="688.8" y="133" width="28.5" height="15.0" fill="rgb(215,181,7)" rx="2" ry="2" />
<text text-anchor="" x="691.83" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >AR..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (74 samples, 0.06%)</title><rect x="841.9" y="117" width="0.8" height="15.0" fill="rgb(249,87,16)" rx="2" ry="2" />
<text text-anchor="" x="844.92" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (114,715 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(205,213,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (18 samples, 0.02%)</title><rect x="845.6" y="101" width="0.2" height="15.0" fill="rgb(242,149,53)" rx="2" ry="2" />
<text text-anchor="" x="848.57" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (1,656 samples, 1.44%)</title><rect x="10.6" y="245" width="17.0" height="15.0" fill="rgb(207,55,2)" rx="2" ry="2" />
<text text-anchor="" x="13.59" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click (114,678 samples, 99.97%)</title><rect x="10.0" y="277" width="1179.6" height="15.0" fill="rgb(215,221,7)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >click</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (266 samples, 0.23%)</title><rect x="842.7" y="133" width="2.8" height="15.0" fill="rgb(210,212,20)" rx="2" ry="2" />
<text text-anchor="" x="845.74" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__softirqentry_text_start (12 samples, 0.01%)</title><rect x="839.8" y="37" width="0.2" height="15.0" fill="rgb(240,221,10)" rx="2" ry="2" />
<text text-anchor="" x="842.84" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
