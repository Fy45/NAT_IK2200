<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="293" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="293" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>common_ring_mc_dequeue (13 samples, 0.01%)</title><rect x="1110.8" y="117" width="0.1" height="15.0" fill="rgb(222,23,10)" rx="2" ry="2" />
<text text-anchor="" x="1113.76" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (6,203 samples, 5.70%)</title><rect x="1121.4" y="101" width="67.3" height="15.0" fill="rgb(222,8,44)" rx="2" ry="2" />
<text text-anchor="" x="1124.43" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (711 samples, 0.65%)</title><rect x="665.8" y="53" width="7.7" height="15.0" fill="rgb(206,131,11)" rx="2" ry="2" />
<text text-anchor="" x="668.83" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (467 samples, 0.43%)</title><rect x="668.5" y="37" width="5.0" height="15.0" fill="rgb(219,110,17)" rx="2" ry="2" />
<text text-anchor="" x="671.47" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::element_hook (17 samples, 0.02%)</title><rect x="1116.5" y="133" width="0.2" height="15.0" fill="rgb(236,47,23)" rx="2" ry="2" />
<text text-anchor="" x="1119.48" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (10 samples, 0.01%)</title><rect x="10.0" y="213" width="0.1" height="15.0" fill="rgb(214,57,3)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (22,999 samples, 21.13%)</title><rect x="865.4" y="133" width="249.3" height="15.0" fill="rgb(223,42,30)" rx="2" ry="2" />
<text text-anchor="" x="868.43" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_recv_mergeable_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (76 samples, 0.07%)</title><rect x="857.0" y="117" width="0.8" height="15.0" fill="rgb(211,131,29)" rx="2" ry="2" />
<text text-anchor="" x="859.98" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click (108,862 samples, 99.99%)</title><rect x="10.0" y="245" width="1179.9" height="15.0" fill="rgb(229,180,39)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >click</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (138 samples, 0.13%)</title><rect x="863.9" y="117" width="1.5" height="15.0" fill="rgb(224,82,50)" rx="2" ry="2" />
<text text-anchor="" x="866.88" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (1,479 samples, 1.36%)</title><rect x="10.4" y="213" width="16.0" height="15.0" fill="rgb(211,70,32)" rx="2" ry="2" />
<text text-anchor="" x="13.36" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (107,335 samples, 98.59%)</title><rect x="26.6" y="229" width="1163.3" height="15.0" fill="rgb(231,31,48)" rx="2" ry="2" />
<text text-anchor="" x="29.55" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (1,497 samples, 1.38%)</title><rect x="10.2" y="229" width="16.2" height="15.0" fill="rgb(225,113,22)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (6,631 samples, 6.09%)</title><rect x="1117.0" y="117" width="71.9" height="15.0" fill="rgb(230,20,27)" rx="2" ry="2" />
<text text-anchor="" x="1120.02" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (15 samples, 0.01%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(250,120,26)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (12,568 samples, 11.54%)</title><rect x="715.3" y="69" width="136.2" height="15.0" fill="rgb(215,195,19)" rx="2" ry="2" />
<text text-anchor="" x="718.26" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_notify_queue</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CheckIPHeader::simple_action_batch (1,263 samples, 1.16%)</title><rect x="675.2" y="101" width="13.7" height="15.0" fill="rgb(250,103,39)" rx="2" ry="2" />
<text text-anchor="" x="678.23" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (25 samples, 0.02%)</title><rect x="1188.9" y="133" width="0.3" height="15.0" fill="rgb(235,8,43)" rx="2" ry="2" />
<text text-anchor="" x="1191.91" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (70 samples, 0.06%)</title><rect x="853.8" y="85" width="0.7" height="15.0" fill="rgb(211,218,19)" rx="2" ry="2" />
<text text-anchor="" x="856.77" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (947 samples, 0.87%)</title><rect x="663.3" y="85" width="10.2" height="15.0" fill="rgb(205,218,27)" rx="2" ry="2" />
<text text-anchor="" x="666.27" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::check_timer_expiry (11 samples, 0.01%)</title><rect x="697.1" y="85" width="0.1" height="15.0" fill="rgb(232,56,20)" rx="2" ry="2" />
<text text-anchor="" x="700.07" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (2,362 samples, 2.17%)</title><rect x="648.5" y="117" width="25.6" height="15.0" fill="rgb(224,160,23)" rx="2" ry="2" />
<text text-anchor="" x="651.45" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (91 samples, 0.08%)</title><rect x="1113.7" y="117" width="1.0" height="15.0" fill="rgb(240,227,51)" rx="2" ry="2" />
<text text-anchor="" x="1116.73" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (12 samples, 0.01%)</title><rect x="26.4" y="213" width="0.2" height="15.0" fill="rgb(218,141,45)" rx="2" ry="2" />
<text text-anchor="" x="29.42" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_in_cksum (948 samples, 0.87%)</title><rect x="678.6" y="85" width="10.3" height="15.0" fill="rgb(228,127,53)" rx="2" ry="2" />
<text text-anchor="" x="681.64" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (12 samples, 0.01%)</title><rect x="1189.0" y="101" width="0.2" height="15.0" fill="rgb(241,11,15)" rx="2" ry="2" />
<text text-anchor="" x="1192.05" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (108,869 samples, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(215,16,3)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (107,289 samples, 98.55%)</title><rect x="26.6" y="181" width="1162.8" height="15.0" fill="rgb(206,6,36)" rx="2" ry="2" />
<text text-anchor="" x="29.55" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (12 samples, 0.01%)</title><rect x="856.9" y="69" width="0.1" height="15.0" fill="rgb(252,229,1)" rx="2" ry="2" />
<text text-anchor="" x="859.85" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (21 samples, 0.02%)</title><rect x="1188.7" y="101" width="0.2" height="15.0" fill="rgb(239,177,5)" rx="2" ry="2" />
<text text-anchor="" x="1191.67" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (77,480 samples, 71.17%)</title><rect x="274.9" y="149" width="839.8" height="15.0" fill="rgb(249,87,35)" rx="2" ry="2" />
<text text-anchor="" x="277.93" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >FromDPDKDevice::run_task</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (58 samples, 0.05%)</title><rect x="864.8" y="85" width="0.6" height="15.0" fill="rgb(246,203,6)" rx="2" ry="2" />
<text text-anchor="" x="867.75" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (107,289 samples, 98.55%)</title><rect x="26.6" y="213" width="1162.8" height="15.0" fill="rgb(233,14,15)" rx="2" ry="2" />
<text text-anchor="" x="29.55" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (107,289 samples, 98.55%)</title><rect x="26.6" y="197" width="1162.8" height="15.0" fill="rgb(217,225,39)" rx="2" ry="2" />
<text text-anchor="" x="29.55" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (22 samples, 0.02%)</title><rect x="697.2" y="85" width="0.2" height="15.0" fill="rgb(249,64,21)" rx="2" ry="2" />
<text text-anchor="" x="700.19" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (40 samples, 0.04%)</title><rect x="851.5" y="69" width="0.4" height="15.0" fill="rgb(228,68,53)" rx="2" ry="2" />
<text text-anchor="" x="854.49" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (189 samples, 0.17%)</title><rect x="854.6" y="101" width="2.1" height="15.0" fill="rgb(231,188,52)" rx="2" ry="2" />
<text text-anchor="" x="857.63" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_data_batch (250 samples, 0.23%)</title><rect x="851.9" y="101" width="2.7" height="15.0" fill="rgb(215,186,52)" rx="2" ry="2" />
<text text-anchor="" x="854.92" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::run_timers (6,758 samples, 6.21%)</title><rect x="1116.1" y="149" width="73.3" height="15.0" fill="rgb(251,31,51)" rx="2" ry="2" />
<text text-anchor="" x="1119.14" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >TimerSet..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (14,236 samples, 13.08%)</title><rect x="697.6" y="101" width="154.3" height="15.0" fill="rgb(226,27,40)" rx="2" ry="2" />
<text text-anchor="" x="700.62" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::flush..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (20,026 samples, 18.39%)</title><rect x="640.7" y="133" width="217.1" height="15.0" fill="rgb(218,209,32)" rx="2" ry="2" />
<text text-anchor="" x="643.75" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Classifier::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (28 samples, 0.03%)</title><rect x="856.7" y="101" width="0.3" height="15.0" fill="rgb(209,210,28)" rx="2" ry="2" />
<text text-anchor="" x="859.68" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (704 samples, 0.65%)</title><rect x="857.8" y="133" width="7.6" height="15.0" fill="rgb(236,147,14)" rx="2" ry="2" />
<text text-anchor="" x="860.80" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (13,973 samples, 12.83%)</title><rect x="700.5" y="85" width="151.4" height="15.0" fill="rgb(254,64,20)" rx="2" ry="2" />
<text text-anchor="" x="703.47" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmit_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (261 samples, 0.24%)</title><rect x="1110.9" y="117" width="2.8" height="15.0" fill="rgb(228,52,8)" rx="2" ry="2" />
<text text-anchor="" x="1113.90" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PacketBatch::recycle_batch (29 samples, 0.03%)</title><rect x="696.5" y="101" width="0.3" height="15.0" fill="rgb(246,127,42)" rx="2" ry="2" />
<text text-anchor="" x="699.47" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self (48 samples, 0.04%)</title><rect x="673.5" y="85" width="0.6" height="15.0" fill="rgb(229,55,49)" rx="2" ry="2" />
<text text-anchor="" x="676.54" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (15,387 samples, 14.13%)</title><rect x="690.2" y="117" width="166.8" height="15.0" fill="rgb(205,49,9)" rx="2" ry="2" />
<text text-anchor="" x="693.21" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::push_ba..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::schedule_at_steady (60 samples, 0.06%)</title><rect x="696.8" y="101" width="0.6" height="15.0" fill="rgb(235,200,22)" rx="2" ry="2" />
<text text-anchor="" x="699.78" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::unschedule (17 samples, 0.02%)</title><rect x="697.4" y="101" width="0.2" height="15.0" fill="rgb(212,139,32)" rx="2" ry="2" />
<text text-anchor="" x="700.43" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (6,664 samples, 6.12%)</title><rect x="1116.7" y="133" width="72.2" height="15.0" fill="rgb(236,134,8)" rx="2" ry="2" />
<text text-anchor="" x="1119.67" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDe..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (129 samples, 0.12%)</title><rect x="864.0" y="101" width="1.4" height="15.0" fill="rgb(239,157,14)" rx="2" ry="2" />
<text text-anchor="" x="866.98" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (15 samples, 0.01%)</title><rect x="26.4" y="229" width="0.2" height="15.0" fill="rgb(250,29,1)" rx="2" ry="2" />
<text text-anchor="" x="29.39" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::handle_ip (2,175 samples, 2.00%)</title><rect x="650.5" y="101" width="23.6" height="15.0" fill="rgb(215,162,5)" rx="2" ry="2" />
<text text-anchor="" x="653.48" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (21 samples, 0.02%)</title><rect x="1188.9" y="117" width="0.3" height="15.0" fill="rgb(224,121,46)" rx="2" ry="2" />
<text text-anchor="" x="1191.95" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (805 samples, 0.74%)</title><rect x="664.8" y="69" width="8.7" height="15.0" fill="rgb(208,18,47)" rx="2" ry="2" />
<text text-anchor="" x="667.81" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>memset@plt (31 samples, 0.03%)</title><rect x="1189.5" y="213" width="0.3" height="15.0" fill="rgb(205,118,4)" rx="2" ry="2" />
<text text-anchor="" x="1192.49" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (23 samples, 0.02%)</title><rect x="856.7" y="85" width="0.3" height="15.0" fill="rgb(252,144,28)" rx="2" ry="2" />
<text text-anchor="" x="859.73" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RouterThread::driver (107,289 samples, 98.55%)</title><rect x="26.6" y="165" width="1162.8" height="15.0" fill="rgb(211,117,12)" rx="2" ry="2" />
<text text-anchor="" x="29.55" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >RouterThread::driver</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SelectSet::run_selects (132 samples, 0.12%)</title><rect x="1114.7" y="149" width="1.4" height="15.0" fill="rgb(252,72,41)" rx="2" ry="2" />
<text text-anchor="" x="1117.71" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (19 samples, 0.02%)</title><rect x="1189.2" y="133" width="0.2" height="15.0" fill="rgb(223,90,26)" rx="2" ry="2" />
<text text-anchor="" x="1192.18" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Strip::simple_action_batch (119 samples, 0.11%)</title><rect x="688.9" y="101" width="1.3" height="15.0" fill="rgb(237,145,10)" rx="2" ry="2" />
<text text-anchor="" x="691.92" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (11 samples, 0.01%)</title><rect x="10.2" y="213" width="0.1" height="15.0" fill="rgb(245,15,19)" rx="2" ry="2" />
<text text-anchor="" x="13.17" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BatchElement::push_batch (1,490 samples, 1.37%)</title><rect x="674.1" y="117" width="16.1" height="15.0" fill="rgb(212,186,32)" rx="2" ry="2" />
<text text-anchor="" x="677.06" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
