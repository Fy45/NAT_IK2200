<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (110,371 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (112 samples, 0.10%; -0.05%)</title><rect x="829.8" y="133" width="1.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="832.79" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (108,852 samples, 98.62%; 0.00%)</title><rect x="25.2" y="245" width="1163.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="28.18" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (108,945 samples, 98.71%; 0.00%)</title><rect x="25.2" y="261" width="1164.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="28.18" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::push_batch (21 samples, 0.02%; 0.00%)</title><rect x="24.9" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="27.95" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::element_hook (16 samples, 0.01%; -0.00%)</title><rect x="1084.8" y="165" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1087.79" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (37 samples, 0.03%; +0.03%)</title><rect x="812.4" y="117" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="815.43" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (78 samples, 0.07%; -0.00%)</title><rect x="823.4" y="149" width="0.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="826.42" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (116 samples, 0.11%; +0.01%)</title><rect x="1081.9" y="149" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1084.86" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (17 samples, 0.02%; -0.00%)</title><rect x="1188.6" y="165" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1191.57" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPFilter::push_batch (21,505 samples, 19.48%; +0.64%)</title><rect x="593.5" y="149" width="229.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text text-anchor="" x="596.51" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >IPFilter::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (636 samples, 0.58%; -0.21%)</title><rect x="824.3" y="165" width="6.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text text-anchor="" x="827.25" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPFlowID::IPFlowID (105 samples, 0.10%; +0.10%)</title><rect x="635.5" y="117" width="1.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text text-anchor="" x="638.46" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (24 samples, 0.02%; +0.00%)</title><rect x="808.4" y="101" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="811.43" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (17 samples, 0.02%; +0.01%)</title><rect x="1188.7" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1191.75" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self (40 samples, 0.04%; +0.04%)</title><rect x="635.0" y="85" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="638.03" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (53 samples, 0.05%; +0.05%)</title><rect x="805.9" y="85" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="808.85" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (824 samples, 0.75%; +0.10%)</title><rect x="814.3" y="101" width="8.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text text-anchor="" x="817.26" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPRewriterFlow::change_expiry (12 samples, 0.01%; +0.01%)</title><rect x="25.0" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="27.99" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>memset@plt (67 samples, 0.06%; +0.02%)</title><rect x="1189.1" y="245" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1192.10" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PacketBatch::recycle_batch (29 samples, 0.03%; +0.03%)</title><rect x="648.1" y="101" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="651.11" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (15,580 samples, 14.12%; +0.51%)</title><rect x="642.1" y="117" width="166.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text text-anchor="" x="645.12" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::push_ba..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;IPRewriterFlow**, IPRewriterFlow::heap_less, IPRewriterFlow::heap_place&gt; (299 samples, 0.27%; +0.27%)</title><rect x="638.9" y="101" width="3.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text text-anchor="" x="641.92" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::run_timers (9,778 samples, 8.86%; +0.01%)</title><rect x="1084.4" y="181" width="104.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1087.39" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >TimerSet::ru..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (15 samples, 0.01%; -0.01%)</title><rect x="1188.6" y="149" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1191.59" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (410 samples, 0.37%; +0.37%)</title><rect x="630.6" y="37" width="4.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text text-anchor="" x="633.65" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (9,669 samples, 8.76%; +0.10%)</title><rect x="1085.2" y="149" width="103.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text text-anchor="" x="1088.19" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmit_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (177 samples, 0.16%; +0.16%)</title><rect x="806.5" y="101" width="1.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text text-anchor="" x="809.54" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::unschedule (27 samples, 0.02%; +0.01%)</title><rect x="649.3" y="101" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="652.26" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPRewriterFlow::change_expiry (518 samples, 0.47%; +0.20%)</title><rect x="636.6" y="117" width="5.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text text-anchor="" x="639.58" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (9,217 samples, 8.35%; +4.86%)</title><rect x="1089.9" y="133" width="98.5" height="15.0" fill="rgb(255,125,125)" rx="2" ry="2" />
<text text-anchor="" x="1092.88" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_noti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (16 samples, 0.01%; +0.01%)</title><rect x="808.5" y="69" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="811.52" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (24 samples, 0.02%; +0.00%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (108,852 samples, 98.62%; 0.00%)</title><rect x="25.2" y="229" width="1163.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="28.18" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BatchElement::push_batch (1,425 samples, 1.29%; -0.04%)</title><rect x="578.3" y="149" width="15.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="581.27" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_in_cksum (874 samples, 0.79%; -0.25%)</title><rect x="582.7" y="117" width="9.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text text-anchor="" x="585.65" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (14 samples, 0.01%; -0.00%)</title><rect x="1188.4" y="133" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1191.42" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SelectSet::run_selects (121 samples, 0.11%; +0.01%)</title><rect x="1083.1" y="181" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1086.10" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (41 samples, 0.04%; +0.04%)</title><rect x="804.3" y="69" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="807.28" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Strip::simple_action_batch (141 samples, 0.13%; -0.01%)</title><rect x="592.0" y="133" width="1.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="595.00" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::handle_ip (1,723 samples, 1.56%; +0.80%)</title><rect x="617.0" y="101" width="18.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text text-anchor="" x="620.04" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::check_timer_expiry (14 samples, 0.01%; +0.01%)</title><rect x="648.8" y="85" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="651.80" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CheckIPHeader::simple_action_batch (1,168 samples, 1.06%; -0.09%)</title><rect x="579.5" y="133" width="12.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text text-anchor="" x="582.51" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (1,357 samples, 1.23%; -0.21%)</title><rect x="10.3" y="245" width="14.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text text-anchor="" x="13.30" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RouterThread::driver (108,852 samples, 98.62%; -3.76%)</title><rect x="25.2" y="197" width="1163.7" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text text-anchor="" x="28.18" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >RouterThread::driver</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (13,303 samples, 12.05%; +12.05%)</title><rect x="662.1" y="69" width="142.2" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text text-anchor="" x="665.06" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_notify_queue</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (23,575 samples, 21.36%; -3.21%)</title><rect x="831.1" y="165" width="252.0" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text text-anchor="" x="834.05" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_recv_mergeable_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (21 samples, 0.02%; +0.00%)</title><rect x="808.5" y="85" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="811.46" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (604 samples, 0.55%; +0.18%)</title><rect x="628.6" y="53" width="6.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text text-anchor="" x="631.57" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (718 samples, 0.65%; +0.20%)</title><rect x="815.4" y="85" width="7.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text text-anchor="" x="818.39" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (61 samples, 0.06%; +0.02%)</title><rect x="830.3" y="117" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="833.34" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (656 samples, 0.59%; +0.42%)</title><rect x="1074.8" y="149" width="7.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text text-anchor="" x="1077.84" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (958 samples, 0.87%; +0.12%)</title><rect x="812.8" y="117" width="10.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text text-anchor="" x="815.82" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (14,356 samples, 13.01%; +0.92%)</title><rect x="651.2" y="85" width="153.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text text-anchor="" x="654.24" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmit_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (78,902 samples, 71.49%; -4.72%)</title><rect x="239.5" y="181" width="843.6" height="15.0" fill="rgb(127,127,255)" rx="2" ry="2" />
<text text-anchor="" x="242.54" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >FromDPDKDevice::run_task</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::UDPFlow::apply (350 samples, 0.32%; +0.32%)</title><rect x="808.7" y="117" width="3.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text text-anchor="" x="811.69" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (12 samples, 0.01%; +0.00%)</title><rect x="1188.6" y="133" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1191.62" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (9,691 samples, 8.78%; -0.01%)</title><rect x="1085.0" y="165" width="103.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1087.96" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (1,384 samples, 1.25%; 0.00%)</title><rect x="10.0" y="261" width="14.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (798 samples, 0.72%; +0.11%)</title><rect x="626.5" y="85" width="8.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text text-anchor="" x="629.50" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (108,852 samples, 98.62%; 0.00%)</title><rect x="25.2" y="213" width="1163.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="28.18" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::schedule_at_steady (79 samples, 0.07%; +0.03%)</title><rect x="648.4" y="101" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="651.42" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clock_gettime@plt (14 samples, 0.01%; -0.00%)</title><rect x="1188.9" y="245" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1191.94" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (682 samples, 0.62%; +0.07%)</title><rect x="627.7" y="69" width="7.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text text-anchor="" x="630.74" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_data_batch (170 samples, 0.15%; +0.10%)</title><rect x="804.7" y="101" width="1.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text text-anchor="" x="807.72" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (493 samples, 0.45%; +0.45%)</title><rect x="817.8" y="69" width="5.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text text-anchor="" x="820.80" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (1,875 samples, 1.70%; +0.14%)</title><rect x="615.4" y="117" width="20.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text text-anchor="" x="618.41" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (29 samples, 0.03%; +0.03%)</title><rect x="648.9" y="85" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="651.95" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (14,514 samples, 13.15%; +0.14%)</title><rect x="649.5" y="101" width="155.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text text-anchor="" x="652.55" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::flush..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::push_batch (20,767 samples, 18.82%; +1.22%)</title><rect x="601.0" y="133" width="222.1" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text text-anchor="" x="604.04" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >UDPRewriter::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (23,621 samples, 21.40%; -0.41%)</title><rect x="571.7" y="165" width="252.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text text-anchor="" x="574.72" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Classifier::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (115 samples, 0.10%; -0.00%)</title><rect x="829.8" y="149" width="1.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="832.76" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click (110,365 samples, 99.99%; 0.00%)</title><rect x="10.0" y="277" width="1179.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >click</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (33 samples, 0.03%; +0.03%)</title><rect x="823.1" y="133" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="826.07" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
