<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="293" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="293" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_in_cksum (1,138 samples, 1.03%; -0.15%)</title><rect x="674.9" y="85" width="12.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text text-anchor="" x="677.89" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (6,260 samples, 5.68%; +1.17%)</title><rect x="1121.8" y="101" width="66.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text text-anchor="" x="1124.77" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (24 samples, 0.02%; 0.00%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (11,467 samples, 10.40%; -0.30%)</title><rect x="698.0" y="101" width="122.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text text-anchor="" x="701.00" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::f..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (108,705 samples, 98.57%; 0.00%)</title><rect x="26.2" y="197" width="1163.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="29.22" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_data_batch (178 samples, 0.16%; -0.11%)</title><rect x="820.7" y="101" width="1.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text text-anchor="" x="823.69" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (955 samples, 0.87%; -0.27%)</title><rect x="658.2" y="53" width="10.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text text-anchor="" x="661.25" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (80,189 samples, 72.71%; -3.85%)</title><rect x="257.4" y="149" width="858.0" height="15.0" fill="rgb(162,162,255)" rx="2" ry="2" />
<text text-anchor="" x="260.42" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >FromDPDKDevice::run_task</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (18 samples, 0.02%; -0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (25 samples, 0.02%; -0.01%)</title><rect x="825.5" y="85" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="828.48" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SelectSet::run_selects (115 samples, 0.10%; -0.01%)</title><rect x="1115.4" y="149" width="1.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1118.43" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (502 samples, 0.46%; -0.08%)</title><rect x="1108.8" y="117" width="5.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text text-anchor="" x="1111.76" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (12,820 samples, 11.62%; -0.68%)</title><rect x="688.6" y="117" width="137.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text text-anchor="" x="691.57" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::pus..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::handle_ip (2,639 samples, 2.39%; -1.24%)</title><rect x="640.7" y="101" width="28.3" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text text-anchor="" x="643.72" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (2,853 samples, 2.59%; -0.19%)</title><rect x="638.4" y="117" width="30.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text text-anchor="" x="641.43" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >AR..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (17 samples, 0.02%; -0.00%)</title><rect x="26.0" y="213" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="29.03" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (21 samples, 0.02%; -0.02%)</title><rect x="697.5" y="85" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="700.53" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Strip::simple_action_batch (141 samples, 0.13%; -0.01%)</title><rect x="687.1" y="101" width="1.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="690.06" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (11 samples, 0.01%; +0.01%)</title><rect x="1189.2" y="133" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1192.20" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::check_timer_expiry (12 samples, 0.01%; -0.01%)</title><rect x="697.4" y="85" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="700.40" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (14 samples, 0.01%; +0.00%)</title><rect x="10.3" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="13.26" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::element_hook (16 samples, 0.01%; +0.00%)</title><rect x="1117.1" y="133" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1120.07" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::unschedule (23 samples, 0.02%; -0.01%)</title><rect x="697.8" y="101" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="700.75" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RouterThread::driver (108,705 samples, 98.57%; -3.09%)</title><rect x="26.2" y="165" width="1163.1" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text text-anchor="" x="29.22" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >RouterThread::driver</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (11,141 samples, 10.10%; -1.79%)</title><rect x="701.5" y="85" width="119.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text text-anchor="" x="704.49" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmit_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>memset@plt (34 samples, 0.03%; +0.03%)</title><rect x="1189.5" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1192.47" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (122 samples, 0.11%; -0.00%)</title><rect x="1114.1" y="117" width="1.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1117.13" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (262 samples, 0.24%; -0.24%)</title><rect x="822.6" y="101" width="2.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text text-anchor="" x="825.60" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (22 samples, 0.02%; 0.00%)</title><rect x="26.0" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="28.99" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (24 samples, 0.02%; -0.00%)</title><rect x="1188.9" y="117" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1191.94" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::schedule_at_steady (60 samples, 0.05%; -0.02%)</title><rect x="697.1" y="101" width="0.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="700.11" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (108,762 samples, 98.62%; 0.00%)</title><rect x="26.2" y="229" width="1163.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="29.22" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (13 samples, 0.01%; -0.00%)</title><rect x="1188.7" y="101" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1191.75" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self (46 samples, 0.04%; -0.04%)</title><rect x="668.5" y="85" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="671.47" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (1,222 samples, 1.11%; -0.14%)</title><rect x="655.4" y="85" width="13.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text text-anchor="" x="658.39" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click (110,280 samples, 100.00%; 0.00%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >click</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (1,452 samples, 1.32%; -0.15%)</title><rect x="10.4" y="213" width="15.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text text-anchor="" x="13.45" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (9,118 samples, 8.27%; -8.26%)</title><rect x="722.7" y="69" width="97.5" height="15.0" fill="rgb(108,108,255)" rx="2" ry="2" />
<text text-anchor="" x="725.67" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_noti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (18,599 samples, 16.86%; -0.30%)</title><rect x="627.8" y="133" width="199.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text text-anchor="" x="630.78" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Classifier::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (14 samples, 0.01%; -0.01%)</title><rect x="1189.0" y="101" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1192.05" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (6,660 samples, 6.04%; -0.04%)</title><rect x="1117.6" y="117" width="71.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1120.63" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (108,705 samples, 98.57%; 0.00%)</title><rect x="26.2" y="213" width="1163.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="29.22" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BatchElement::push_batch (1,833 samples, 1.66%; -0.06%)</title><rect x="669.0" y="117" width="19.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="671.96" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PacketBatch::recycle_batch (46 samples, 0.04%; -0.04%)</title><rect x="696.6" y="101" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="699.62" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self@plt (11 samples, 0.01%; -0.00%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1192.84" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (108,705 samples, 98.57%; 0.00%)</title><rect x="26.2" y="181" width="1163.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="29.22" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (660 samples, 0.60%; -0.60%)</title><rect x="661.4" y="37" width="7.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text text-anchor="" x="664.41" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (110,282 samples, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CheckIPHeader::simple_action_batch (1,500 samples, 1.36%; -0.04%)</title><rect x="671.0" y="101" width="16.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="674.01" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (1,470 samples, 1.33%; 0.00%)</title><rect x="10.3" y="229" width="15.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.26" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (45 samples, 0.04%; -0.04%)</title><rect x="822.0" y="85" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="825.02" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (32 samples, 0.03%; -0.01%)</title><rect x="825.4" y="101" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="828.40" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (106 samples, 0.10%; +0.04%)</title><rect x="833.8" y="101" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="836.77" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (28 samples, 0.03%; +0.00%)</title><rect x="1188.9" y="133" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="1191.90" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (1,073 samples, 0.97%; -0.11%)</title><rect x="657.0" y="69" width="11.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text text-anchor="" x="659.99" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (110 samples, 0.10%; +0.00%)</title><rect x="833.7" y="117" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="836.73" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (6,696 samples, 6.07%; -0.01%)</title><rect x="1117.2" y="133" width="71.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1120.24" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDe..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (97 samples, 0.09%; -0.02%)</title><rect x="825.7" y="117" width="1.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="828.75" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (17 samples, 0.02%; -0.02%)</title><rect x="825.6" y="69" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="828.56" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (26,215 samples, 23.77%; -4.94%)</title><rect x="834.9" y="133" width="280.5" height="15.0" fill="rgb(149,149,255)" rx="2" ry="2" />
<text text-anchor="" x="837.94" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_recv_mergeable_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::run_timers (6,792 samples, 6.16%; -0.00%)</title><rect x="1116.7" y="149" width="72.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="1119.66" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >TimerSet..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (43 samples, 0.04%; -0.04%)</title><rect x="820.2" y="69" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="823.23" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (762 samples, 0.69%; -0.06%)</title><rect x="826.8" y="133" width="8.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text text-anchor="" x="829.78" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (40 samples, 0.04%; +0.03%)</title><rect x="834.5" y="85" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text text-anchor="" x="837.48" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
