<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (1,156 samples, 1.05%)</title><rect x="668.7" y="85" width="12.3" height="15.0" fill="rgb(228,146,37)" rx="2" ry="2" />
<text text-anchor="" x="671.70" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (4,242 samples, 3.84%)</title><rect x="1142.5" y="149" width="45.3" height="15.0" fill="rgb(221,206,28)" rx="2" ry="2" />
<text text-anchor="" x="1145.52" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virt..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (56 samples, 0.05%)</title><rect x="859.1" y="69" width="0.6" height="15.0" fill="rgb(226,116,17)" rx="2" ry="2" />
<text text-anchor="" x="862.05" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (239 samples, 0.22%)</title><rect x="865.8" y="101" width="2.5" height="15.0" fill="rgb(219,50,53)" rx="2" ry="2" />
<text text-anchor="" x="868.77" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (928 samples, 0.84%)</title><rect x="671.1" y="53" width="9.9" height="15.0" fill="rgb(221,205,28)" rx="2" ry="2" />
<text text-anchor="" x="674.13" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (2,602 samples, 2.35%)</title><rect x="654.0" y="117" width="27.7" height="15.0" fill="rgb(222,199,53)" rx="2" ry="2" />
<text text-anchor="" x="656.95" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (75 samples, 0.07%)</title><rect x="889.4" y="149" width="0.8" height="15.0" fill="rgb(226,220,15)" rx="2" ry="2" />
<text text-anchor="" x="892.40" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::push_batch (32 samples, 0.03%)</title><rect x="24.6" y="261" width="0.4" height="15.0" fill="rgb(222,146,45)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::UDPFlow::apply (506 samples, 0.46%)</title><rect x="868.7" y="117" width="5.4" height="15.0" fill="rgb(249,93,31)" rx="2" ry="2" />
<text text-anchor="" x="871.65" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPFilter::push_batch (25,121 samples, 22.73%)</title><rect x="621.2" y="149" width="268.2" height="15.0" fill="rgb(234,1,23)" rx="2" ry="2" />
<text text-anchor="" x="624.17" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >IPFilter::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::run_timers (4,388 samples, 3.97%)</title><rect x="1141.7" y="181" width="46.8" height="15.0" fill="rgb(226,78,12)" rx="2" ry="2" />
<text text-anchor="" x="1144.66" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Time..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::handle_ip (2,386 samples, 2.16%)</title><rect x="656.3" y="101" width="25.4" height="15.0" fill="rgb(227,113,23)" rx="2" ry="2" />
<text text-anchor="" x="659.26" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (108,968 samples, 98.60%)</title><rect x="25.0" y="245" width="1163.5" height="15.0" fill="rgb(233,187,37)" rx="2" ry="2" />
<text text-anchor="" x="28.04" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (18 samples, 0.02%)</title><rect x="868.5" y="69" width="0.2" height="15.0" fill="rgb(244,154,31)" rx="2" ry="2" />
<text text-anchor="" x="871.46" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (12,357 samples, 11.18%)</title><rect x="727.1" y="69" width="132.0" height="15.0" fill="rgb(216,70,46)" rx="2" ry="2" />
<text text-anchor="" x="730.11" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_notify_qu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (44 samples, 0.04%)</title><rect x="874.1" y="117" width="0.4" height="15.0" fill="rgb(234,86,12)" rx="2" ry="2" />
<text text-anchor="" x="877.06" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self (19 samples, 0.02%)</title><rect x="902.7" y="149" width="0.2" height="15.0" fill="rgb(207,177,36)" rx="2" ry="2" />
<text text-anchor="" x="905.68" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (1,349 samples, 1.22%)</title><rect x="10.1" y="261" width="14.4" height="15.0" fill="rgb(221,119,24)" rx="2" ry="2" />
<text text-anchor="" x="13.07" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;IPRewriterFlow**, IPRewriterFlow::heap_less, IPRewriterFlow::heap_place&gt; (472 samples, 0.43%)</title><rect x="686.6" y="101" width="5.0" height="15.0" fill="rgb(221,76,33)" rx="2" ry="2" />
<text text-anchor="" x="689.60" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self (65 samples, 0.06%)</title><rect x="681.0" y="85" width="0.7" height="15.0" fill="rgb(210,114,28)" rx="2" ry="2" />
<text text-anchor="" x="684.04" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (22,236 samples, 20.12%)</title><rect x="902.9" y="165" width="237.4" height="15.0" fill="rgb(209,129,2)" rx="2" ry="2" />
<text text-anchor="" x="905.89" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_recv_mergeable_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (110,514 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(237,22,32)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (26 samples, 0.02%)</title><rect x="1187.9" y="149" width="0.2" height="15.0" fill="rgb(252,147,47)" rx="2" ry="2" />
<text text-anchor="" x="1190.86" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (25 samples, 0.02%)</title><rect x="700.1" y="85" width="0.3" height="15.0" fill="rgb(212,76,0)" rx="2" ry="2" />
<text text-anchor="" x="703.11" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (15 samples, 0.01%)</title><rect x="1188.0" y="133" width="0.1" height="15.0" fill="rgb(253,96,50)" rx="2" ry="2" />
<text text-anchor="" x="1190.98" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::push_batch (24,121 samples, 21.83%)</title><rect x="631.5" y="133" width="257.5" height="15.0" fill="rgb(232,157,43)" rx="2" ry="2" />
<text text-anchor="" x="634.49" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >UDPRewriter::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BatchElement::push_batch (1,885 samples, 1.71%)</title><rect x="601.0" y="149" width="20.2" height="15.0" fill="rgb(227,135,14)" rx="2" ry="2" />
<text text-anchor="" x="604.05" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPRewriterFlow::change_expiry (750 samples, 0.68%)</title><rect x="683.6" y="117" width="8.0" height="15.0" fill="rgb(254,189,51)" rx="2" ry="2" />
<text text-anchor="" x="686.64" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (423 samples, 0.38%)</title><rect x="898.2" y="149" width="4.5" height="15.0" fill="rgb(243,209,27)" rx="2" ry="2" />
<text text-anchor="" x="901.17" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPRewriterFlow::change_expiry (14 samples, 0.01%)</title><rect x="24.7" y="245" width="0.1" height="15.0" fill="rgb(212,75,7)" rx="2" ry="2" />
<text text-anchor="" x="27.69" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (3,932 samples, 3.56%)</title><rect x="1145.7" y="133" width="42.0" height="15.0" fill="rgb(226,10,51)" rx="2" ry="2" />
<text text-anchor="" x="1148.74" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >mod..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (704 samples, 0.64%)</title><rect x="1131.3" y="149" width="7.5" height="15.0" fill="rgb(249,66,21)" rx="2" ry="2" />
<text text-anchor="" x="1134.29" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (31 samples, 0.03%)</title><rect x="868.3" y="101" width="0.4" height="15.0" fill="rgb(236,31,21)" rx="2" ry="2" />
<text text-anchor="" x="871.32" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (16,578 samples, 15.00%)</title><rect x="691.6" y="117" width="177.1" height="15.0" fill="rgb(212,46,38)" rx="2" ry="2" />
<text text-anchor="" x="694.64" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (630 samples, 0.57%)</title><rect x="674.3" y="37" width="6.7" height="15.0" fill="rgb(228,141,46)" rx="2" ry="2" />
<text text-anchor="" x="677.31" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Strip::simple_action_batch (166 samples, 0.15%)</title><rect x="619.4" y="133" width="1.8" height="15.0" fill="rgb(214,144,35)" rx="2" ry="2" />
<text text-anchor="" x="622.40" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PacketBatch::recycle_batch (47 samples, 0.04%)</title><rect x="699.2" y="101" width="0.5" height="15.0" fill="rgb(227,33,50)" rx="2" ry="2" />
<text text-anchor="" x="702.16" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (18 samples, 0.02%)</title><rect x="10.1" y="245" width="0.2" height="15.0" fill="rgb(239,132,46)" rx="2" ry="2" />
<text text-anchor="" x="13.07" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click (110,502 samples, 99.99%)</title><rect x="10.0" y="277" width="1179.9" height="15.0" fill="rgb(249,191,0)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >click</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (630 samples, 0.57%)</title><rect x="882.3" y="69" width="6.7" height="15.0" fill="rgb(208,87,4)" rx="2" ry="2" />
<text text-anchor="" x="885.31" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CheckIPHeader::simple_action_batch (1,594 samples, 1.44%)</title><rect x="602.4" y="133" width="17.0" height="15.0" fill="rgb(225,229,32)" rx="2" ry="2" />
<text text-anchor="" x="605.38" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (1,188 samples, 1.07%)</title><rect x="890.2" y="165" width="12.7" height="15.0" fill="rgb(247,133,25)" rx="2" ry="2" />
<text text-anchor="" x="893.20" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self@plt (13 samples, 0.01%)</title><rect x="1189.7" y="245" width="0.2" height="15.0" fill="rgb(208,150,36)" rx="2" ry="2" />
<text text-anchor="" x="1192.73" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (84,156 samples, 76.15%)</title><rect x="241.7" y="181" width="898.6" height="15.0" fill="rgb(220,197,35)" rx="2" ry="2" />
<text text-anchor="" x="244.74" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >FromDPDKDevice::run_task</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>free (23 samples, 0.02%)</title><rect x="865.5" y="85" width="0.3" height="15.0" fill="rgb(218,134,12)" rx="2" ry="2" />
<text text-anchor="" x="868.51" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_data_batch (573 samples, 0.52%)</title><rect x="859.7" y="101" width="6.1" height="15.0" fill="rgb(233,97,14)" rx="2" ry="2" />
<text text-anchor="" x="862.65" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::unschedule (20 samples, 0.02%)</title><rect x="700.4" y="101" width="0.2" height="15.0" fill="rgb(242,56,31)" rx="2" ry="2" />
<text text-anchor="" x="703.40" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (4,263 samples, 3.86%)</title><rect x="1142.3" y="165" width="45.5" height="15.0" fill="rgb(206,200,24)" rx="2" ry="2" />
<text text-anchor="" x="1145.29" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDP..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (27,900 samples, 25.25%)</title><rect x="592.3" y="165" width="297.9" height="15.0" fill="rgb(233,162,46)" rx="2" ry="2" />
<text text-anchor="" x="595.30" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Classifier::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (158 samples, 0.14%)</title><rect x="901.0" y="117" width="1.7" height="15.0" fill="rgb(247,135,54)" rx="2" ry="2" />
<text text-anchor="" x="904.00" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (33 samples, 0.03%)</title><rect x="1188.1" y="165" width="0.4" height="15.0" fill="rgb(230,55,20)" rx="2" ry="2" />
<text text-anchor="" x="1191.14" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (108,968 samples, 98.60%)</title><rect x="25.0" y="213" width="1163.5" height="15.0" fill="rgb(235,10,23)" rx="2" ry="2" />
<text text-anchor="" x="28.04" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (109,093 samples, 98.71%)</title><rect x="25.0" y="261" width="1164.9" height="15.0" fill="rgb(220,202,43)" rx="2" ry="2" />
<text text-anchor="" x="28.04" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (31 samples, 0.03%)</title><rect x="1187.8" y="165" width="0.3" height="15.0" fill="rgb(213,33,12)" rx="2" ry="2" />
<text text-anchor="" x="1190.81" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (186 samples, 0.17%)</title><rect x="863.5" y="85" width="1.9" height="15.0" fill="rgb(211,72,45)" rx="2" ry="2" />
<text text-anchor="" x="866.45" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (141 samples, 0.13%)</title><rect x="1138.8" y="149" width="1.5" height="15.0" fill="rgb(206,69,32)" rx="2" ry="2" />
<text text-anchor="" x="1141.80" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>common_ring_mc_dequeue (13 samples, 0.01%)</title><rect x="1131.1" y="149" width="0.2" height="15.0" fill="rgb(218,182,11)" rx="2" ry="2" />
<text text-anchor="" x="1134.15" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPFlowID::IPFlowID (178 samples, 0.16%)</title><rect x="681.7" y="117" width="1.9" height="15.0" fill="rgb(217,97,42)" rx="2" ry="2" />
<text text-anchor="" x="684.74" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::schedule_at_steady (69 samples, 0.06%)</title><rect x="699.7" y="101" width="0.7" height="15.0" fill="rgb(219,56,14)" rx="2" ry="2" />
<text text-anchor="" x="702.66" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (410 samples, 0.37%)</title><rect x="898.3" y="133" width="4.4" height="15.0" fill="rgb(250,36,11)" rx="2" ry="2" />
<text text-anchor="" x="901.30" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clock_gettime@plt (34 samples, 0.03%)</title><rect x="1188.5" y="245" width="0.4" height="15.0" fill="rgb(241,157,31)" rx="2" ry="2" />
<text text-anchor="" x="1191.54" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (14,490 samples, 13.11%)</title><rect x="704.9" y="85" width="154.8" height="15.0" fill="rgb(205,190,28)" rx="2" ry="2" />
<text text-anchor="" x="707.94" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmit_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>memset@plt (68 samples, 0.06%)</title><rect x="1189.0" y="245" width="0.7" height="15.0" fill="rgb(226,115,12)" rx="2" ry="2" />
<text text-anchor="" x="1191.95" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RouterThread::driver (108,968 samples, 98.60%)</title><rect x="25.0" y="197" width="1163.5" height="15.0" fill="rgb(230,229,35)" rx="2" ry="2" />
<text text-anchor="" x="28.04" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >RouterThread::driver</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (1,173 samples, 1.06%)</title><rect x="876.5" y="101" width="12.5" height="15.0" fill="rgb(254,6,29)" rx="2" ry="2" />
<text text-anchor="" x="879.51" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (1,323 samples, 1.20%)</title><rect x="10.4" y="245" width="14.1" height="15.0" fill="rgb(249,105,54)" rx="2" ry="2" />
<text text-anchor="" x="13.35" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (14,895 samples, 13.48%)</title><rect x="700.6" y="101" width="159.1" height="15.0" fill="rgb(228,1,42)" rx="2" ry="2" />
<text text-anchor="" x="703.61" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::flush_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (1,359 samples, 1.23%)</title><rect x="874.5" y="117" width="14.5" height="15.0" fill="rgb(237,21,25)" rx="2" ry="2" />
<text text-anchor="" x="877.53" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::element_hook (12 samples, 0.01%)</title><rect x="1142.2" y="165" width="0.1" height="15.0" fill="rgb(218,117,12)" rx="2" ry="2" />
<text text-anchor="" x="1145.17" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (25 samples, 0.02%)</title><rect x="868.4" y="85" width="0.3" height="15.0" fill="rgb(226,117,45)" rx="2" ry="2" />
<text text-anchor="" x="871.39" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (11 samples, 0.01%)</title><rect x="700.5" y="85" width="0.1" height="15.0" fill="rgb(254,205,32)" rx="2" ry="2" />
<text text-anchor="" x="703.47" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SelectSet::run_selects (127 samples, 0.11%)</title><rect x="1140.3" y="181" width="1.4" height="15.0" fill="rgb(222,106,53)" rx="2" ry="2" />
<text text-anchor="" x="1143.31" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (108,968 samples, 98.60%)</title><rect x="25.0" y="229" width="1163.5" height="15.0" fill="rgb(254,134,32)" rx="2" ry="2" />
<text text-anchor="" x="28.04" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_in_cksum (1,185 samples, 1.07%)</title><rect x="606.7" y="117" width="12.7" height="15.0" fill="rgb(249,28,11)" rx="2" ry="2" />
<text text-anchor="" x="609.75" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (34 samples, 0.03%)</title><rect x="889.0" y="133" width="0.4" height="15.0" fill="rgb(226,9,29)" rx="2" ry="2" />
<text text-anchor="" x="892.04" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (998 samples, 0.90%)</title><rect x="670.4" y="69" width="10.6" height="15.0" fill="rgb(208,128,22)" rx="2" ry="2" />
<text text-anchor="" x="673.39" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (999 samples, 0.90%)</title><rect x="878.4" y="85" width="10.6" height="15.0" fill="rgb(210,152,7)" rx="2" ry="2" />
<text text-anchor="" x="881.37" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
