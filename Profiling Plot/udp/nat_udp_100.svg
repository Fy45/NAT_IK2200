<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (17,354 samples, 15.89%)</title><rect x="662.0" y="69" width="187.6" height="15.0" fill="rgb(248,197,24)" rx="2" ry="2" />
<text text-anchor="" x="665.02" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_notify_queue</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click (109,172 samples, 99.99%)</title><rect x="10.0" y="277" width="1179.9" height="15.0" fill="rgb(214,159,43)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >click</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (1,822 samples, 1.67%)</title><rect x="611.9" y="117" width="19.6" height="15.0" fill="rgb(217,89,4)" rx="2" ry="2" />
<text text-anchor="" x="614.85" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self (40 samples, 0.04%)</title><rect x="631.1" y="85" width="0.4" height="15.0" fill="rgb(226,106,21)" rx="2" ry="2" />
<text text-anchor="" x="634.11" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (12 samples, 0.01%)</title><rect x="1188.7" y="149" width="0.1" height="15.0" fill="rgb(213,206,35)" rx="2" ry="2" />
<text text-anchor="" x="1191.71" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (80,692 samples, 73.91%)</title><rect x="226.4" y="181" width="872.1" height="15.0" fill="rgb(210,120,28)" rx="2" ry="2" />
<text text-anchor="" x="229.44" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >FromDPDKDevice::run_task</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (29 samples, 0.03%)</title><rect x="868.3" y="133" width="0.3" height="15.0" fill="rgb(205,154,12)" rx="2" ry="2" />
<text text-anchor="" x="871.27" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (109,183 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(208,1,29)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (107,688 samples, 98.63%)</title><rect x="25.1" y="213" width="1163.9" height="15.0" fill="rgb(233,22,13)" rx="2" ry="2" />
<text text-anchor="" x="28.13" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (700 samples, 0.64%)</title><rect x="1089.9" y="149" width="7.5" height="15.0" fill="rgb(224,149,43)" rx="2" ry="2" />
<text text-anchor="" x="1092.87" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BatchElement::push_batch (1,346 samples, 1.23%)</title><rect x="575.3" y="149" width="14.6" height="15.0" fill="rgb(215,218,23)" rx="2" ry="2" />
<text text-anchor="" x="578.31" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (12 samples, 0.01%)</title><rect x="24.8" y="261" width="0.1" height="15.0" fill="rgb(211,211,33)" rx="2" ry="2" />
<text text-anchor="" x="27.78" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (774 samples, 0.71%)</title><rect x="859.9" y="101" width="8.4" height="15.0" fill="rgb(206,227,36)" rx="2" ry="2" />
<text text-anchor="" x="862.91" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (7,812 samples, 7.15%)</title><rect x="1104.1" y="133" width="84.4" height="15.0" fill="rgb(221,95,8)" rx="2" ry="2" />
<text text-anchor="" x="1107.11" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_no..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (107,688 samples, 98.63%)</title><rect x="25.1" y="245" width="1163.9" height="15.0" fill="rgb(236,146,44)" rx="2" ry="2" />
<text text-anchor="" x="28.13" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (897 samples, 0.82%)</title><rect x="858.6" y="117" width="9.7" height="15.0" fill="rgb(252,198,12)" rx="2" ry="2" />
<text text-anchor="" x="861.58" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::run_timers (8,271 samples, 7.58%)</title><rect x="1099.6" y="181" width="89.4" height="15.0" fill="rgb(238,29,15)" rx="2" ry="2" />
<text text-anchor="" x="1102.58" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >TimerSet::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPFlowID::IPFlowID (138 samples, 0.13%)</title><rect x="631.5" y="117" width="1.5" height="15.0" fill="rgb(244,20,49)" rx="2" ry="2" />
<text text-anchor="" x="634.54" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_in_cksum (877 samples, 0.80%)</title><rect x="579.3" y="117" width="9.5" height="15.0" fill="rgb(241,62,21)" rx="2" ry="2" />
<text text-anchor="" x="582.28" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clock_gettime@plt (13 samples, 0.01%)</title><rect x="1189.0" y="245" width="0.1" height="15.0" fill="rgb(244,56,40)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (27,719 samples, 25.39%)</title><rect x="569.5" y="165" width="299.6" height="15.0" fill="rgb(229,189,40)" rx="2" ry="2" />
<text text-anchor="" x="572.52" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Classifier::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (687 samples, 0.63%)</title><rect x="860.8" y="85" width="7.5" height="15.0" fill="rgb(240,20,15)" rx="2" ry="2" />
<text text-anchor="" x="863.85" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::schedule_at_steady (71 samples, 0.07%)</title><rect x="645.7" y="101" width="0.8" height="15.0" fill="rgb(220,41,26)" rx="2" ry="2" />
<text text-anchor="" x="648.73" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RouterThread::driver (107,688 samples, 98.63%)</title><rect x="25.1" y="197" width="1163.9" height="15.0" fill="rgb(211,19,36)" rx="2" ry="2" />
<text text-anchor="" x="28.13" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >RouterThread::driver</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::unschedule (28 samples, 0.03%)</title><rect x="646.5" y="101" width="0.3" height="15.0" fill="rgb(205,128,31)" rx="2" ry="2" />
<text text-anchor="" x="649.50" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (18,579 samples, 17.02%)</title><rect x="649.1" y="85" width="200.8" height="15.0" fill="rgb(212,26,34)" rx="2" ry="2" />
<text text-anchor="" x="652.14" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmit_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (23 samples, 0.02%)</title><rect x="854.2" y="85" width="0.3" height="15.0" fill="rgb(205,146,2)" rx="2" ry="2" />
<text text-anchor="" x="857.24" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::UDPFlow::apply (347 samples, 0.32%)</title><rect x="854.5" y="117" width="3.7" height="15.0" fill="rgb(224,87,17)" rx="2" ry="2" />
<text text-anchor="" x="857.49" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (8,156 samples, 7.47%)</title><rect x="1100.5" y="149" width="88.1" height="15.0" fill="rgb(252,157,36)" rx="2" ry="2" />
<text text-anchor="" x="1103.49" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (134 samples, 0.12%)</title><rect x="874.9" y="133" width="1.4" height="15.0" fill="rgb(225,43,24)" rx="2" ry="2" />
<text text-anchor="" x="877.87" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPRewriterFlow::change_expiry (653 samples, 0.60%)</title><rect x="633.0" y="117" width="7.1" height="15.0" fill="rgb(223,147,0)" rx="2" ry="2" />
<text text-anchor="" x="636.03" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (47 samples, 0.04%)</title><rect x="868.6" y="149" width="0.5" height="15.0" fill="rgb(224,173,39)" rx="2" ry="2" />
<text text-anchor="" x="871.58" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::handle_ip (1,667 samples, 1.53%)</title><rect x="613.5" y="101" width="18.0" height="15.0" fill="rgb(225,66,33)" rx="2" ry="2" />
<text text-anchor="" x="616.53" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (107,772 samples, 98.71%)</title><rect x="25.1" y="261" width="1164.8" height="15.0" fill="rgb(246,129,17)" rx="2" ry="2" />
<text text-anchor="" x="28.13" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (15 samples, 0.01%)</title><rect x="854.3" y="69" width="0.2" height="15.0" fill="rgb(231,200,29)" rx="2" ry="2" />
<text text-anchor="" x="857.33" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (101 samples, 0.09%)</title><rect x="1097.4" y="149" width="1.1" height="15.0" fill="rgb(212,64,31)" rx="2" ry="2" />
<text text-anchor="" x="1100.43" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (19 samples, 0.02%)</title><rect x="1188.6" y="165" width="0.2" height="15.0" fill="rgb(228,196,39)" rx="2" ry="2" />
<text text-anchor="" x="1191.64" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (58 samples, 0.05%)</title><rect x="875.7" y="117" width="0.6" height="15.0" fill="rgb(227,167,22)" rx="2" ry="2" />
<text text-anchor="" x="878.70" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CheckIPHeader::simple_action_batch (1,140 samples, 1.04%)</title><rect x="576.4" y="133" width="12.4" height="15.0" fill="rgb(208,159,3)" rx="2" ry="2" />
<text text-anchor="" x="579.43" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPRewriterFlow::change_expiry (10 samples, 0.01%)</title><rect x="24.9" y="245" width="0.2" height="15.0" fill="rgb(239,127,17)" rx="2" ry="2" />
<text text-anchor="" x="27.95" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;IPRewriterFlow**, IPRewriterFlow::heap_less, IPRewriterFlow::heap_place&gt; (460 samples, 0.42%)</title><rect x="635.1" y="101" width="5.0" height="15.0" fill="rgb(210,78,32)" rx="2" ry="2" />
<text text-anchor="" x="638.12" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (11 samples, 0.01%)</title><rect x="1188.8" y="165" width="0.2" height="15.0" fill="rgb(229,170,6)" rx="2" ry="2" />
<text text-anchor="" x="1191.84" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>perf_4.9 (10 samples, 0.01%)</title><rect x="1189.9" y="277" width="0.1" height="15.0" fill="rgb(251,32,0)" rx="2" ry="2" />
<text text-anchor="" x="1192.89" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>memset@plt (59 samples, 0.05%)</title><rect x="1189.1" y="245" width="0.7" height="15.0" fill="rgb(240,135,0)" rx="2" ry="2" />
<text text-anchor="" x="1192.15" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (18,795 samples, 17.21%)</title><rect x="646.8" y="101" width="203.1" height="15.0" fill="rgb(224,210,46)" rx="2" ry="2" />
<text text-anchor="" x="649.80" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::flush_intern..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (704 samples, 0.64%)</title><rect x="623.5" y="69" width="7.6" height="15.0" fill="rgb(233,84,37)" rx="2" ry="2" />
<text text-anchor="" x="626.50" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (178 samples, 0.16%)</title><rect x="852.3" y="101" width="1.9" height="15.0" fill="rgb(245,145,18)" rx="2" ry="2" />
<text text-anchor="" x="855.25" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (814 samples, 0.75%)</title><rect x="622.3" y="85" width="8.8" height="15.0" fill="rgb(228,142,26)" rx="2" ry="2" />
<text text-anchor="" x="625.31" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (631 samples, 0.58%)</title><rect x="624.3" y="53" width="6.8" height="15.0" fill="rgb(233,27,32)" rx="2" ry="2" />
<text text-anchor="" x="627.29" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (139 samples, 0.13%)</title><rect x="874.8" y="149" width="1.5" height="15.0" fill="rgb(219,116,43)" rx="2" ry="2" />
<text text-anchor="" x="877.82" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_data_batch (215 samples, 0.20%)</title><rect x="849.9" y="101" width="2.4" height="15.0" fill="rgb(224,52,46)" rx="2" ry="2" />
<text text-anchor="" x="852.93" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPFilter::push_batch (25,790 samples, 23.62%)</title><rect x="589.9" y="149" width="278.7" height="15.0" fill="rgb(237,20,51)" rx="2" ry="2" />
<text text-anchor="" x="592.86" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >IPFilter::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (33 samples, 0.03%)</title><rect x="646.1" y="85" width="0.4" height="15.0" fill="rgb(221,14,42)" rx="2" ry="2" />
<text text-anchor="" x="649.13" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::element_hook (16 samples, 0.01%)</title><rect x="1100.0" y="165" width="0.2" height="15.0" fill="rgb(252,10,19)" rx="2" ry="2" />
<text text-anchor="" x="1103.03" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (441 samples, 0.40%)</title><rect x="626.3" y="37" width="4.8" height="15.0" fill="rgb(233,7,47)" rx="2" ry="2" />
<text text-anchor="" x="629.34" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (672 samples, 0.62%)</title><rect x="869.1" y="165" width="7.3" height="15.0" fill="rgb(236,225,40)" rx="2" ry="2" />
<text text-anchor="" x="872.09" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (31 samples, 0.03%)</title><rect x="858.2" y="117" width="0.4" height="15.0" fill="rgb(214,170,36)" rx="2" ry="2" />
<text text-anchor="" x="861.24" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (20,557 samples, 18.83%)</title><rect x="876.4" y="165" width="222.1" height="15.0" fill="rgb(237,61,12)" rx="2" ry="2" />
<text text-anchor="" x="879.35" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_recv_mergeable_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (1,345 samples, 1.23%)</title><rect x="10.2" y="245" width="14.5" height="15.0" fill="rgb(254,117,39)" rx="2" ry="2" />
<text text-anchor="" x="13.17" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (62 samples, 0.06%)</title><rect x="851.5" y="85" width="0.7" height="15.0" fill="rgb(212,112,2)" rx="2" ry="2" />
<text text-anchor="" x="854.49" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (107,688 samples, 98.63%)</title><rect x="25.1" y="229" width="1163.9" height="15.0" fill="rgb(211,10,46)" rx="2" ry="2" />
<text text-anchor="" x="28.13" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (8,183 samples, 7.49%)</title><rect x="1100.2" y="165" width="88.4" height="15.0" fill="rgb(243,123,19)" rx="2" ry="2" />
<text text-anchor="" x="1103.20" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (19,838 samples, 18.17%)</title><rect x="640.1" y="117" width="214.4" height="15.0" fill="rgb(220,120,49)" rx="2" ry="2" />
<text text-anchor="" x="643.09" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (416 samples, 0.38%)</title><rect x="863.8" y="69" width="4.5" height="15.0" fill="rgb(251,147,44)" rx="2" ry="2" />
<text text-anchor="" x="866.77" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PacketBatch::recycle_batch (22 samples, 0.02%)</title><rect x="645.5" y="101" width="0.2" height="15.0" fill="rgb(224,195,18)" rx="2" ry="2" />
<text text-anchor="" x="648.49" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (29 samples, 0.03%)</title><rect x="854.2" y="101" width="0.3" height="15.0" fill="rgb(215,203,20)" rx="2" ry="2" />
<text text-anchor="" x="857.18" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (33 samples, 0.03%)</title><rect x="849.6" y="69" width="0.3" height="15.0" fill="rgb(223,80,5)" rx="2" ry="2" />
<text text-anchor="" x="852.57" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::push_batch (19 samples, 0.02%)</title><rect x="24.9" y="261" width="0.2" height="15.0" fill="rgb(239,25,29)" rx="2" ry="2" />
<text text-anchor="" x="27.91" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UDPRewriter::push_batch (25,140 samples, 23.03%)</title><rect x="596.6" y="133" width="271.7" height="15.0" fill="rgb(217,128,15)" rx="2" ry="2" />
<text text-anchor="" x="599.57" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >UDPRewriter::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Strip::simple_action_batch (102 samples, 0.09%)</title><rect x="588.8" y="133" width="1.1" height="15.0" fill="rgb(208,84,19)" rx="2" ry="2" />
<text text-anchor="" x="591.75" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (1,358 samples, 1.24%)</title><rect x="10.0" y="261" width="14.7" height="15.0" fill="rgb(210,65,35)" rx="2" ry="2" />
<text text-anchor="" x="13.03" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SelectSet::run_selects (98 samples, 0.09%)</title><rect x="1098.5" y="181" width="1.1" height="15.0" fill="rgb(243,171,26)" rx="2" ry="2" />
<text text-anchor="" x="1101.52" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
