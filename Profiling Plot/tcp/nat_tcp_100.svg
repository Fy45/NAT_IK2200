<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (26 samples, 0.02%)</title><rect x="1188.4" y="149" width="0.3" height="15.0" fill="rgb(249,175,28)" rx="2" ry="2" />
<text text-anchor="" x="1191.44" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_data_batch (215 samples, 0.19%)</title><rect x="845.4" y="101" width="2.3" height="15.0" fill="rgb(205,32,45)" rx="2" ry="2" />
<text text-anchor="" x="848.41" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (30 samples, 0.03%)</title><rect x="1188.4" y="165" width="0.3" height="15.0" fill="rgb(224,190,33)" rx="2" ry="2" />
<text text-anchor="" x="1191.39" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (50 samples, 0.05%)</title><rect x="869.4" y="117" width="0.5" height="15.0" fill="rgb(220,55,41)" rx="2" ry="2" />
<text text-anchor="" x="872.41" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tick_sched_timer (38 samples, 0.03%)</title><rect x="10.2" y="149" width="0.4" height="15.0" fill="rgb(242,48,5)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>smp_apic_timer_interrupt (40 samples, 0.04%)</title><rect x="10.1" y="229" width="0.5" height="15.0" fill="rgb(242,140,8)" rx="2" ry="2" />
<text text-anchor="" x="13.15" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (324 samples, 0.29%)</title><rect x="1080.0" y="149" width="3.4" height="15.0" fill="rgb(218,0,30)" rx="2" ry="2" />
<text text-anchor="" x="1082.96" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPRewriterFlow::change_expiry (759 samples, 0.68%)</title><rect x="607.2" y="117" width="8.0" height="15.0" fill="rgb(250,58,38)" rx="2" ry="2" />
<text text-anchor="" x="610.16" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>run_timer_softirq (38 samples, 0.03%)</title><rect x="10.2" y="133" width="0.4" height="15.0" fill="rgb(231,142,42)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click (110,898 samples, 99.99%)</title><rect x="10.0" y="277" width="1179.9" height="15.0" fill="rgb(234,75,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >click</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (18 samples, 0.02%)</title><rect x="1188.2" y="133" width="0.2" height="15.0" fill="rgb(235,122,4)" rx="2" ry="2" />
<text text-anchor="" x="1191.19" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (21,467 samples, 19.36%)</title><rect x="621.5" y="117" width="228.4" height="15.0" fill="rgb(210,12,1)" rx="2" ry="2" />
<text text-anchor="" x="624.51" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (620 samples, 0.56%)</title><rect x="599.1" y="53" width="6.6" height="15.0" fill="rgb(220,2,36)" rx="2" ry="2" />
<text text-anchor="" x="602.08" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (19,055 samples, 17.18%)</title><rect x="642.3" y="69" width="202.8" height="15.0" fill="rgb(254,128,42)" rx="2" ry="2" />
<text text-anchor="" x="645.34" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_notify_queue</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (12 samples, 0.01%)</title><rect x="1188.7" y="165" width="0.1" height="15.0" fill="rgb(210,86,13)" rx="2" ry="2" />
<text text-anchor="" x="1191.71" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>irq_exit (40 samples, 0.04%)</title><rect x="10.1" y="213" width="0.5" height="15.0" fill="rgb(253,126,30)" rx="2" ry="2" />
<text text-anchor="" x="13.15" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TCPRewriter::push_batch (27,408 samples, 24.71%)</title><rect x="569.7" y="133" width="291.6" height="15.0" fill="rgb(234,177,53)" rx="2" ry="2" />
<text text-anchor="" x="572.73" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >TCPRewriter::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TCPRewriter::push_batch (35 samples, 0.03%)</title><rect x="24.7" y="261" width="0.4" height="15.0" fill="rgb(238,180,39)" rx="2" ry="2" />
<text text-anchor="" x="27.68" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::push_batch (1,846 samples, 1.66%)</title><rect x="586.4" y="117" width="19.6" height="15.0" fill="rgb(237,24,40)" rx="2" ry="2" />
<text text-anchor="" x="589.37" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (16 samples, 0.01%)</title><rect x="849.7" y="85" width="0.2" height="15.0" fill="rgb(207,176,52)" rx="2" ry="2" />
<text text-anchor="" x="852.74" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__irqentry_text_start (40 samples, 0.04%)</title><rect x="10.1" y="245" width="0.5" height="15.0" fill="rgb(235,60,39)" rx="2" ry="2" />
<text text-anchor="" x="13.15" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Packet::make (688 samples, 0.62%)</title><rect x="862.7" y="165" width="7.3" height="15.0" fill="rgb(216,59,5)" rx="2" ry="2" />
<text text-anchor="" x="865.66" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (20,239 samples, 18.25%)</title><rect x="630.1" y="85" width="215.3" height="15.0" fill="rgb(246,177,45)" rx="2" ry="2" />
<text text-anchor="" x="633.08" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmit_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Strip::simple_action_batch (136 samples, 0.12%)</title><rect x="562.3" y="133" width="1.5" height="15.0" fill="rgb(235,217,21)" rx="2" ry="2" />
<text text-anchor="" x="565.35" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;IPRewriterFlow**, IPRewriterFlow::heap_less, IPRewriterFlow::heap_place&gt; (596 samples, 0.54%)</title><rect x="608.9" y="101" width="6.3" height="15.0" fill="rgb(236,60,19)" rx="2" ry="2" />
<text text-anchor="" x="611.89" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (1,039 samples, 0.94%)</title><rect x="850.3" y="117" width="11.0" height="15.0" fill="rgb(239,218,33)" rx="2" ry="2" />
<text text-anchor="" x="853.29" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>modern_notify_queue (9,121 samples, 8.22%)</title><rect x="1091.1" y="133" width="97.1" height="15.0" fill="rgb(237,105,16)" rx="2" ry="2" />
<text text-anchor="" x="1094.15" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >modern_noti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BatchElement::push_batch (1,416 samples, 1.28%)</title><rect x="548.7" y="149" width="15.1" height="15.0" fill="rgb(252,139,39)" rx="2" ry="2" />
<text text-anchor="" x="551.73" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CheckIPHeader::simple_action_batch (1,145 samples, 1.03%)</title><rect x="550.2" y="133" width="12.1" height="15.0" fill="rgb(250,50,2)" rx="2" ry="2" />
<text text-anchor="" x="553.16" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>common_ring_mc_dequeue (13 samples, 0.01%)</title><rect x="1079.8" y="149" width="0.2" height="15.0" fill="rgb(205,25,23)" rx="2" ry="2" />
<text text-anchor="" x="1082.83" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TCPRewriter::TCPFlow::apply (590 samples, 0.53%)</title><rect x="615.2" y="117" width="6.3" height="15.0" fill="rgb(225,152,44)" rx="2" ry="2" />
<text text-anchor="" x="618.24" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (32 samples, 0.03%)</title><rect x="845.1" y="69" width="0.3" height="15.0" fill="rgb(220,23,37)" rx="2" ry="2" />
<text text-anchor="" x="848.07" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (20,417 samples, 18.41%)</title><rect x="628.2" y="101" width="217.2" height="15.0" fill="rgb(221,154,37)" rx="2" ry="2" />
<text text-anchor="" x="631.18" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice::flush_internal..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clock_gettime@plt (25 samples, 0.02%)</title><rect x="1188.9" y="245" width="0.2" height="15.0" fill="rgb(225,133,24)" rx="2" ry="2" />
<text text-anchor="" x="1191.88" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_timestamp_jiffies (810 samples, 0.73%)</title><rect x="597.1" y="85" width="8.6" height="15.0" fill="rgb(231,197,9)" rx="2" ry="2" />
<text text-anchor="" x="600.06" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::unschedule (32 samples, 0.03%)</title><rect x="627.8" y="101" width="0.4" height="15.0" fill="rgb(209,26,18)" rx="2" ry="2" />
<text text-anchor="" x="630.84" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Classifier::push_batch (30,149 samples, 27.18%)</title><rect x="541.9" y="165" width="320.8" height="15.0" fill="rgb(232,201,50)" rx="2" ry="2" />
<text text-anchor="" x="544.89" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Classifier::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPFlowID::IPFlowID (108 samples, 0.10%)</title><rect x="606.0" y="117" width="1.2" height="15.0" fill="rgb(233,62,24)" rx="2" ry="2" />
<text text-anchor="" x="609.01" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::element_hook (18 samples, 0.02%)</title><rect x="1086.5" y="165" width="0.2" height="15.0" fill="rgb(240,45,41)" rx="2" ry="2" />
<text text-anchor="" x="1089.47" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (518 samples, 0.47%)</title><rect x="855.8" y="69" width="5.5" height="15.0" fill="rgb(213,6,3)" rx="2" ry="2" />
<text text-anchor="" x="858.83" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (81,059 samples, 73.09%)</title><rect x="222.3" y="181" width="862.4" height="15.0" fill="rgb(239,169,54)" rx="2" ry="2" />
<text text-anchor="" x="225.30" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >FromDPDKDevice::run_task</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__softirqentry_text_start (40 samples, 0.04%)</title><rect x="10.1" y="197" width="0.5" height="15.0" fill="rgb(229,42,7)" rx="2" ry="2" />
<text text-anchor="" x="13.15" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RouterThread::driver (109,373 samples, 98.62%)</title><rect x="25.2" y="197" width="1163.7" height="15.0" fill="rgb(235,22,24)" rx="2" ry="2" />
<text text-anchor="" x="28.19" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >RouterThread::driver</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::check_timer_expiry (14 samples, 0.01%)</title><rect x="627.5" y="85" width="0.1" height="15.0" fill="rgb(243,63,30)" rx="2" ry="2" />
<text text-anchor="" x="630.46" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (127 samples, 0.11%)</title><rect x="868.6" y="133" width="1.3" height="15.0" fill="rgb(232,156,11)" rx="2" ry="2" />
<text text-anchor="" x="871.59" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>FromDPDKDevice::run_task (1,374 samples, 1.24%)</title><rect x="10.0" y="261" width="14.7" height="15.0" fill="rgb(205,166,5)" rx="2" ry="2" />
<text text-anchor="" x="13.04" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vdso_clock_gettime (765 samples, 0.69%)</title><rect x="853.2" y="85" width="8.1" height="15.0" fill="rgb(249,111,28)" rx="2" ry="2" />
<text text-anchor="" x="856.20" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>neigh_timer_handler (37 samples, 0.03%)</title><rect x="10.2" y="101" width="0.4" height="15.0" fill="rgb(238,122,18)" rx="2" ry="2" />
<text text-anchor="" x="13.17" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (20 samples, 0.02%)</title><rect x="849.7" y="101" width="0.2" height="15.0" fill="rgb(223,157,50)" rx="2" ry="2" />
<text text-anchor="" x="852.70" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self (31 samples, 0.03%)</title><rect x="605.7" y="85" width="0.3" height="15.0" fill="rgb(214,213,28)" rx="2" ry="2" />
<text text-anchor="" x="608.68" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (73 samples, 0.07%)</title><rect x="846.8" y="85" width="0.8" height="15.0" fill="rgb(234,91,19)" rx="2" ry="2" />
<text text-anchor="" x="849.81" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (13 samples, 0.01%)</title><rect x="1188.6" y="133" width="0.1" height="15.0" fill="rgb(233,159,46)" rx="2" ry="2" />
<text text-anchor="" x="1191.57" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (109,468 samples, 98.70%)</title><rect x="25.2" y="261" width="1164.7" height="15.0" fill="rgb(211,125,26)" rx="2" ry="2" />
<text text-anchor="" x="28.19" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>netlink_broadcast_filtered (37 samples, 0.03%)</title><rect x="10.2" y="53" width="0.4" height="15.0" fill="rgb(219,207,50)" rx="2" ry="2" />
<text text-anchor="" x="13.17" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>enqueue_hrtimer (38 samples, 0.03%)</title><rect x="10.2" y="181" width="0.4" height="15.0" fill="rgb(215,116,51)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (133 samples, 0.12%)</title><rect x="868.5" y="149" width="1.4" height="15.0" fill="rgb(227,109,47)" rx="2" ry="2" />
<text text-anchor="" x="871.52" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Timer::schedule_at_steady (80 samples, 0.07%)</title><rect x="627.0" y="101" width="0.8" height="15.0" fill="rgb(227,195,54)" rx="2" ry="2" />
<text text-anchor="" x="629.99" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (1,324 samples, 1.19%)</title><rect x="10.6" y="245" width="14.1" height="15.0" fill="rgb(236,195,10)" rx="2" ry="2" />
<text text-anchor="" x="13.57" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::flush_internal_tx_queue (9,561 samples, 8.62%)</title><rect x="1086.7" y="165" width="101.7" height="15.0" fill="rgb(215,59,47)" rx="2" ry="2" />
<text text-anchor="" x="1089.66" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ToDPDKDevice..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (20 samples, 0.02%)</title><rect x="627.6" y="85" width="0.2" height="15.0" fill="rgb(244,76,38)" rx="2" ry="2" />
<text text-anchor="" x="630.61" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PacketBatch::recycle_batch (29 samples, 0.03%)</title><rect x="626.7" y="101" width="0.3" height="15.0" fill="rgb(211,164,17)" rx="2" ry="2" />
<text text-anchor="" x="629.68" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (109,373 samples, 98.62%)</title><rect x="25.2" y="245" width="1163.7" height="15.0" fill="rgb(243,125,8)" rx="2" ry="2" />
<text text-anchor="" x="28.19" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TimerSet::run_timers (9,660 samples, 8.71%)</title><rect x="1086.1" y="181" width="102.8" height="15.0" fill="rgb(216,85,22)" rx="2" ry="2" />
<text text-anchor="" x="1089.09" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >TimerSet::ru..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[[vdso]] (406 samples, 0.37%)</title><rect x="601.4" y="37" width="4.3" height="15.0" fill="rgb(241,221,42)" rx="2" ry="2" />
<text text-anchor="" x="604.36" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (109,373 samples, 98.62%)</title><rect x="25.2" y="213" width="1163.7" height="15.0" fill="rgb(247,14,22)" rx="2" ry="2" />
<text text-anchor="" x="28.19" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>TCPRewriter::TCPFlow::apply (16 samples, 0.01%)</title><rect x="24.8" y="245" width="0.2" height="15.0" fill="rgb(233,28,37)" rx="2" ry="2" />
<text text-anchor="" x="27.79" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (685 samples, 0.62%)</title><rect x="598.4" y="69" width="7.3" height="15.0" fill="rgb(254,216,53)" rx="2" ry="2" />
<text text-anchor="" x="601.39" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (34 samples, 0.03%)</title><rect x="861.3" y="133" width="0.4" height="15.0" fill="rgb(224,93,43)" rx="2" ry="2" />
<text text-anchor="" x="864.34" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IPFilter::push_batch (28,000 samples, 25.25%)</title><rect x="563.8" y="149" width="297.9" height="15.0" fill="rgb(224,74,0)" rx="2" ry="2" />
<text text-anchor="" x="566.79" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >IPFilter::push_batch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>memset@plt (58 samples, 0.05%)</title><rect x="1189.2" y="245" width="0.6" height="15.0" fill="rgb(243,33,40)" rx="2" ry="2" />
<text text-anchor="" x="1192.17" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>timerqueue_add (38 samples, 0.03%)</title><rect x="10.2" y="165" width="0.4" height="15.0" fill="rgb(242,130,24)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_self@plt (10 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.1" height="15.0" fill="rgb(221,189,17)" rx="2" ry="2" />
<text text-anchor="" x="1192.79" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (110,906 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(222,53,49)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (35 samples, 0.03%)</title><rect x="849.9" y="117" width="0.4" height="15.0" fill="rgb(238,217,51)" rx="2" ry="2" />
<text text-anchor="" x="852.91" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>neigh_timer_handler (37 samples, 0.03%)</title><rect x="10.2" y="85" width="0.4" height="15.0" fill="rgb(251,224,53)" rx="2" ry="2" />
<text text-anchor="" x="13.17" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>click_in_cksum (897 samples, 0.81%)</title><rect x="552.8" y="117" width="9.5" height="15.0" fill="rgb(248,34,27)" rx="2" ry="2" />
<text text-anchor="" x="555.80" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (109,373 samples, 98.62%)</title><rect x="25.2" y="229" width="1163.7" height="15.0" fill="rgb(249,126,41)" rx="2" ry="2" />
<text text-anchor="" x="28.19" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.24.so] (90 samples, 0.08%)</title><rect x="861.7" y="149" width="1.0" height="15.0" fill="rgb(242,72,41)" rx="2" ry="2" />
<text text-anchor="" x="864.70" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>change_heap&lt;4, TimerSet::heap_element*, TimerSet::heap_less, TimerSet::heap_place&gt; (12 samples, 0.01%)</title><rect x="628.0" y="85" width="0.1" height="15.0" fill="rgb(235,187,1)" rx="2" ry="2" />
<text text-anchor="" x="630.99" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>call_timer_fn (37 samples, 0.03%)</title><rect x="10.2" y="117" width="0.4" height="15.0" fill="rgb(240,187,47)" rx="2" ry="2" />
<text text-anchor="" x="13.17" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ToDPDKDevice::push_batch (13 samples, 0.01%)</title><rect x="25.1" y="261" width="0.1" height="15.0" fill="rgb(226,205,43)" rx="2" ry="2" />
<text text-anchor="" x="28.06" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SelectSet::run_selects (127 samples, 0.11%)</title><rect x="1084.7" y="181" width="1.4" height="15.0" fill="rgb(245,202,2)" rx="2" ry="2" />
<text text-anchor="" x="1087.74" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ARPQuerier::handle_ip (1,686 samples, 1.52%)</title><rect x="588.1" y="101" width="17.9" height="15.0" fill="rgb(205,136,45)" rx="2" ry="2" />
<text text-anchor="" x="591.07" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_xmit_pkts (9,539 samples, 8.60%)</title><rect x="1086.9" y="149" width="101.5" height="15.0" fill="rgb(222,213,11)" rx="2" ry="2" />
<text text-anchor="" x="1089.89" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_xmit_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_recv_mergeable_pkts (20,185 samples, 18.20%)</title><rect x="870.0" y="165" width="214.7" height="15.0" fill="rgb(251,206,40)" rx="2" ry="2" />
<text text-anchor="" x="872.98" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >virtio_recv_mergeable_pkts</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (188 samples, 0.17%)</title><rect x="847.7" y="101" width="2.0" height="15.0" fill="rgb(211,90,30)" rx="2" ry="2" />
<text text-anchor="" x="850.70" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nlmsg_notify (37 samples, 0.03%)</title><rect x="10.2" y="69" width="0.4" height="15.0" fill="rgb(248,46,35)" rx="2" ry="2" />
<text text-anchor="" x="13.17" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>virtio_update_packet_stats (125 samples, 0.11%)</title><rect x="1083.4" y="149" width="1.3" height="15.0" fill="rgb(236,203,39)" rx="2" ry="2" />
<text text-anchor="" x="1086.41" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (888 samples, 0.80%)</title><rect x="851.9" y="101" width="9.4" height="15.0" fill="rgb(240,169,15)" rx="2" ry="2" />
<text text-anchor="" x="854.89" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WritablePacket::recycle_packet_batch (12 samples, 0.01%)</title><rect x="25.1" y="245" width="0.1" height="15.0" fill="rgb(253,97,26)" rx="2" ry="2" />
<text text-anchor="" x="28.07" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
